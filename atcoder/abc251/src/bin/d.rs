use itertools::Itertools;
use proconio::input;
fn main() {
    input!{
        _w: usize,
    }
    // d.txtがすべての問いに対する答えとなる
    // これは出力用
    let mut k = 1u64;
    let mut ans = vec![];
    for _ in 0..3 {
        for j in 0..=100 {
            if k * j != 0 {
                ans.push(k * j);
            }
        }
        k *= 100;
    }
    println!("{}", ans.len());
    println!("{}", ans.iter().join(" "));

}

/*
例えば, w = 999の場合は
    1, 2, ..., 9
    10, 20, ..., 90
    100, 200, ..., 900
ですべてのパターンを網羅できる。これは、i桁目がa_iである値xが
    x = a_0 * 10^0 + a_1 * 10^1 + a_2 * 10^2
で表されるため、a_i * 10^i がすべて網羅されていれば良い、ということである。

ここで、N進法3桁で表せられる最大値はN^3-1であり(が、実際には0はいらないので、0の代わりにN^3を持つことにする)、それを表すのに必要な値の個数は3*N個である。
ここまで理解すれば、w = 10^6のとき100進数を考えるとうまく行くことに気づける。 
*/



